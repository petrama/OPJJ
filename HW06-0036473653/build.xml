<project name="HW06-0036473653" default="jar" basedir="."
xmlns:jacoco="antlib:org.jacoco.ant"
	xmlns:cs="antlib:com.puppycrawl.tools.checkstyle">

<property file="config.properties" />
<property name="src" location="src"/>
<property name="src.java" location="${src}/main/java"/>
<property name="src.test" location="${src}/test/java"/>
<property name="build" location="build"/>
<property name="build.classes" location="${build}/classes"/>
<property name="build.test" location="${build}/tests"/>
<property name="dist" location="dist"/>
<property name="dist.lib" location="${dist}/lib"/>
<property name="program" value="hr.fer.zemris.bool" />


<path id="compile.path">
  <pathelement location="${build.classes}"/>
</path>


<path id="test.path">
  <path refid="compile.path"/>
  <pathelement location="${build.test}"/>
  <fileset dir="${junit.home}">
    <include name="**/*.jar"/>
  </fileset>
</path>


<path id="pmd.lib" >
<fileset dir="${pmd.home}/lib">
<include name="*.jar"/>
</fileset>
</path>


<target name="init">
  <tstamp/>
  <mkdir dir="${build}"/>
  <mkdir dir="${dist}"/>
</target>

<!--naredba za checkstyle-->
	<taskdef uri="antlib:com.puppycrawl.tools.checkstyle"
   resource="checkstyletask.properties"
   classpath="${checkstyle.home}/${checkstyle.jar}"
/>
<taskdef name="findbugs"
  classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
  <classpath path="${findbugs.home}/lib/findbugs-ant.jar"/>
</taskdef>


<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"
  classpathref="pmd.lib" />

<taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask"
  classpathref="pmd.lib" />



<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
   <classpath path="${jacoco.home}/lib/jacocoant.jar"/>
</taskdef>


<target name="compile" depends="init" description="Prevodenje izvornog koda">
  <mkdir dir="${build.classes}"/>
  <javac srcdir="${src.java}" destdir="${build.classes}"
    encoding="UTF-8" debug="on"
    debuglevel="lines,vars,source"
    includeAntRuntime="false" />
</target>
 

<target name="compile-tests" depends="compile" description="Prevodenje izvornog koda testova">
  <mkdir dir="${build.test}"/>
  <javac srcdir="${src.test}" destdir="${build.test}"
    classpathref="test.path"
    encoding="UTF-8" debug="on"
    debuglevel="lines,vars,source"
    includeAntRuntime="false" />
</target>


<target name="findbugs" depends="compile">
  <mkdir dir="${dist}/findbugs/xml"/>
  <mkdir dir="${dist}/findbugs/html"/>

  <findbugs home="${findbugs.home}"
    output="xml:withMessages"
    outputFile="${dist}/findbugs/xml/report.xml"
    workHard="true" effort="max"
    projectName="${ant.project.name}">
      <sourcePath path="${src.java}" />
      <class location="${build.classes}" />
  </findbugs>
  
  

  <xslt includes="report.xml" basedir="${dist}/findbugs/xml"
    destdir="${dist}/findbugs/html" extension=".html"
    style="${findbugs.home}/src/xsl/fancy.xsl" >
    <classpath>
      <fileset dir="${xalan.home}">
         <include name="*.jar"/>
      </fileset>
    </classpath>
  </xslt>
</target>

<!--dio od checkstyla-->

	<target name="cs" depends="compile">
	<mkdir dir="${dist}/checkstyle/xml"/>
	<mkdir dir="${dist}/checkstyle/html"/>
	<cs:checkstyle config="${checkstyle.home}/${checkstyle.style}"
    failOnViolation="false">
		<fileset dir="${src.java}" includes="**/*.java"/>
		<formatter type="xml"
		toFile="${dist}/checkstyle/xml/checkstyle_errors.xml"/>
		</cs:checkstyle>

	<xslt basedir="${dist}/checkstyle/xml"
	destdir="${dist}/checkstyle/html" extension=".html"
	style="${checkstyle.home}/contrib/checkstyle-frames.xsl">
	<classpath>
	<fileset dir="${xalan.home}">
		<include name="*.jar"/>
	</fileset>
	</classpath>
	</xslt>
	</target>

<target name="pmd" depends="compile">
  <mkdir dir="${dist}/pmd/xml"/>
  <mkdir dir="${dist}/pmd/html"/>

  <pmd shortFilenames="true" encoding="UTF-8">
    <ruleset>rulesets/java/basic.xml</ruleset>
    <ruleset>rulesets/java/braces.xml</ruleset>
    <ruleset>rulesets/java/codesize.xml</ruleset>
    <ruleset>rulesets/java/controversial.xml</ruleset>
    <ruleset>rulesets/java/design.xml</ruleset>
    <ruleset>rulesets/java/finalizers.xml</ruleset>
    <ruleset>rulesets/java/imports.xml</ruleset>
    <ruleset>rulesets/java/naming.xml</ruleset>
    <ruleset>rulesets/java/optimizations.xml</ruleset>
    <ruleset>rulesets/java/strictexception.xml</ruleset>
    <ruleset>rulesets/java/strings.xml</ruleset>
    <ruleset>rulesets/java/sunsecure.xml</ruleset>
    <ruleset>rulesets/java/typeresolution.xml</ruleset>
    <ruleset>rulesets/java/unusedcode.xml</ruleset>
    <ruleset>rulesets/java/unnecessary.xml</ruleset>
    <formatter type="xml" toFile="${dist}/pmd/xml/pmd_report.xml"/>
    <fileset dir="${src.java}">
       <include name="**/*.java"/>
    </fileset>
  </pmd>
 
  <cpd minimumTokenCount="10" outputFile="${dist}/pmd/xml/cpd_report.xml"
        format="xml" encoding="UTF-8">
     <fileset dir="src">
       <include name="**/*.java"/>
     </fileset>
  </cpd>

  <xslt includes="cpd_report.xml" basedir="${dist}/pmd/xml"
      destdir="${dist}/pmd/html" extension=".html"
      style="${pmd.home}/etc/xslt/cpdhtml.xslt" >
    <classpath>
      <fileset dir="${xalan.home}">
        <include name="*.jar"/>
      </fileset>
    </classpath>
  </xslt>

  <xslt includes="pmd_report.xml" basedir="${dist}/pmd/xml"
        destdir="${dist}/pmd/html" extension=".html"
        style="${pmd.home}/etc/xslt/wz-pmd-report.xslt" >
    <classpath>
       <fileset dir="${xalan.home}">
          <include name="*.jar"/>
       </fileset>
    </classpath>
  </xslt>
</target>


<target name="javadoc" depends="compile" description="Generiranje dokumentacije" >
  <mkdir dir="${dist}/doc"/>
  <javadoc packagenames="hr.*" sourcepath="${src.java}"
     Overview="${src.java}/overview.html" defaultexcludes="yes"
     destdir="${dist}/doc" Encoding="UTF-8"
     docencoding="UTF-8" charset="UTF-8"
     author="true" version="true"
     use="true" windowtitle="Dokumentacija programa">
    <doctitle>
       <![CDATA[<h1>Domaca zadaca 04/h1>]]>
    </doctitle>
  </javadoc>
</target>


<target name="run" depends="compile" description="Pokretanje programa">

<java classname="${program}" classpath="${build.classes}" fork="true">
    <jvmarg value="-Dfile.encoding=IBM852" />
  </java>
</target>

<target name="run-tests" depends="compile-tests" description="Izvodenje definiranih testova" >
  <mkdir dir="${dist}/test-reports/xml"/>
  <mkdir dir="${dist}/test-reports/html"/>
  <mkdir dir="${dist}/test-reports/coverage"/>

  <jacoco:coverage destfile="${dist}/test-reports/xml/jacoco.exec">
    <junit printsummary="yes" haltonfailure="yes" fork="true" forkmode="once">
    <classpath refid="test.path" />

    <formatter type="plain"/>
    <formatter type="xml"/>

    <batchtest fork="yes" todir="${dist}/test-reports/xml">
       <fileset dir="${src.test}">
         <include name="**/*Test*.java"/>
       </fileset>
    </batchtest>
  </junit>
  </jacoco:coverage>
   <junitreport todir="${dist}/test-reports/xml">
   <fileset dir="${dist}/test-reports/xml">
      <include name="TEST-*.xml"/>
   </fileset>
   <report format="frames" todir="${dist}/test-reports/html"/>
  </junitreport>

  <jacoco:report>
    <executiondata>
    <file file="${dist}/test-reports/xml/jacoco.exec"/>
    </executiondata>
  <structure name="${ant.project.name}">
  <classfiles>
    <fileset dir="${build.classes}"/>
    <fileset dir="${build.test}"/>
  </classfiles>
  <sourcefiles encoding="UTF-8">
    <fileset dir="${src.java}"/>
    <fileset dir="${src.test}"/>
  </sourcefiles>
  </structure>
  <html destdir="${dist}/test-reports/coverage"/>
  </jacoco:report>
</target>


<target name="jar" depends="compile" description="Pakiranje programa u arhivu JAR" >
<mkdir dir="${dist.lib}"/>

<jar jarfile="${dist.lib}/${ant.project.name}-${DSTAMP}.jar" basedir="${build.classes}">
  <manifest>
    <attribute name="Main-Class" value="${program}"/>
  </manifest>
  </jar>
</target>

<target name="clean" description="Brisanje generiranog sadrzaja" >
  <delete dir="${build}" failonerror="false" />
  <delete dir="${dist}" failonerror="false" />
</target>


<target name="quality" depends="findbugs,pmd,cs" description="Provjeravanje kvalitete" >
</target>


<target name="reports" depends="quality,run-tests,javadoc" description="Provjeravanje kvalitete" >
</target>


</project>
