<project name="HW05-0036473632" xmlns:jacoco="antlib:org.jacoco.ant" xmlns:cs="antlib:com.puppycrawl.tools.checkstyle"
  default="jar" basedir=".">

	<description>
		Build datoteka za HW05-0036473632.
	</description>

	<!-- Postavljanje globalnih varijabli -->
	<property name="src" location="src"/>
	<property name="src.java" location="${src}/main/java"/>
	<property name="src.test" location="${src}/test/java"/>
	<property name="build" location="build"/>
	<property name="build.classes" location="${build}/classes"/>
	<property name="build.test" location="${build}/classes"/>
	<property name="dist"  location="dist"/>
	<property name="dist.lib"  location="${dist}/lib"/>
	<property name="reports.dir" location="reports/"/>
	<property name="lib" location="lib"/>
	<property file="config.properties"/>
	
	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
	<classpath path="${jacoco.home}/lib/jacocoant.jar"/>
	</taskdef>
	
	<taskdef uri="antlib:com.puppycrawl.tools.checkstyle" 
	resource="checkstyletask.properties" 
	classpath="${checkstyle.home}/${checkstyle.jar}"/>
	
	
	<!--definiranje staze za prevodenje koda -->
	<path id="compile.path">
	<pathelement location="${build.classes}"/>
	<fileset dir="${lib}">
	<include name="*.jar"/>
	</fileset>
	</path>
	
	<!--definiranje staze za alat pmd -->
	<path id="pmd.lib">
	<fileset dir="${pmd.home}/lib">
	<include name="*.jar"/>
	</fileset>
	</path>
	
	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
	<classpath path="${findbugs.home}/lib/findbugs-ant.jar"/>
	</taskdef>
	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.lib"/>
	<taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask" classpathref="pmd.lib"/>
	
	<!--definiranje staze za prevodenje testova -->
	<path id="test.path">
	<path refid="compile.path"/>
	<pathelement location="${build.test}"/>
	<fileset dir="${junit.home}">
	<include name="**/*.jar"/>
	</fileset>
	</path>
	
	<!--definiranje staze za alat pmd -->
	<path id="pmd.lib">
	<fileset dir="${pmd.home}/lib">
	<include name="*.jar"/>
	</fileset>
	</path>
	
	
	
	<target name="init">
		<!-- Stvaranje vremenske oznake -->
		<tstamp/>
		<!-- Stvaranje potrebnih direktorija -->
		<mkdir dir="${build}"/>
		<mkdir dir="${dist}"/>
	</target>

	<target name="compile" depends="init" 
		description="Prevođenje izvornog koda">
		<mkdir dir="${build.classes}"/>
		<!-- Prevođenje Java koda iz ${src} u ${build} -->
		<javac srcdir="${src.java}" destdir="${build.classes}" 
			encoding="UTF-8" debug="on" 
			debuglevel="lines,vars,source" 
			includeAntRuntime="false"
			classpathref="compile.path"/>
	</target>
	
	<target name="compile-tests" depends="compile"
	description="prevodenje izvornog koda testova">
	<mkdir dir="${build.test}"/>
	<!--prevodenje java koda iz ${src} u ${build} -->
	<javac srcdir="${src.test}" destdir="${build.test}"
	classpathref="test.path"
	encoding="UTF-8" debug="on"
	debuglevel="lines,vars,source"
	includeAntRuntime="false"/>
	</target>
	
	<target name="jar" depends="compile">
<mkdir dir="${dist.lib}"/>
<jar jarfile="${dist.lib}/lin-impl.jar" basedir="${build.classes}" excludes="**/demo/**">
<fileset dir = "${src.java}" excludes="**/demo/**"/>
</jar>
<jar jarfile="${dist.lib}/lin-demos.jar" basedir="${build.classes}" includes="**/demo/**" />
<copy file="${lib}/lin-models.jar" toFile="${dist.lib}/lin-models.jar" />
</target>
	
	<target name="run-tests" depends="compile-tests"
	description="izvodenje definiranih testova" >
	<mkdir dir="${dist}/test-reports/xml"/>
	<mkdir dir="${dist}/test-reports/html"/>
	<mkdir dir="${dist}/test-reports/coverage"/>
	
	<jacoco:coverage destfile="${dist}/test-reports/xml/jacoco.exec">	
	<junit printsummary="yes" haltonfailure="yes"
	fork="true" forkmode="once">
	<classpath refid="test.path" />
	
	<formatter type="plain"/>
	<formatter type="xml"/>
	
	<batchtest fork="yes" todir="${dist}/test-reports/xml">
	<fileset dir="${src.test}">
	<include name="**/*Test*.java"/>
	</fileset>
	</batchtest>
	</junit>
	</jacoco:coverage>
	
	<!--generiraj izvjestaj na temelju testova -->
	<junitreport todir="${dist}/test-reports/xml">
	<fileset dir="${dist}/test-reports/xml">
	<include name="TEST-*.xml"/>
	</fileset>
	<report format="frames" todir="${dist}/test-reports/html"/>
	</junitreport>
	
	<!--generiraj izvjestaj o pokrivenosti koda testovima-->
	<jacoco:report>
	<executiondata>
	<file file="${dist}/test-reports/xml/jacoco.exec"/>
	</executiondata>
	
	<structure name="${ant.project.name}">
	<classfiles>
	<fileset dir="${build.classes}"/>
	<fileset dir="${build.test}"/>
	</classfiles>
	<sourcefiles encoding="UTF-8">
	<fileset dir="${src.java}"/>
	<fileset dir="${src.test}"/>
	</sourcefiles>
	</structure>
	<html destdir="${dist}/test-reports/coverage"/>
	</jacoco:report>
	</target>
	
	<target name="cs" depends="compile">
	<mkdir dir="${dist}/checkstyle/xml"/>
	<mkdir dir="${dist}/checkstyle/html"/>
	<cs:checkstyle config="${checkstyle.home}/${checkstyle.style}"
	failOnViolation="false">
	<fileset dir="${src.java}" 
	includes="**/*.java"/>
	<formatter type="xml" 
	toFile="${dist}/checkstyle/xml/checkstyle_errors.xml"/>
	</cs:checkstyle>
	<xslt basedir="${dist}/checkstyle/xml" 
	destdir="${dist}/checkstyle/html"
	extension=".html" 
	style="${checkstyle.home}/contrib/checkstyle-frames.xsl">
	<classpath>
	<fileset dir="${xalan.home}">
	<include name="*.jar"/>
	</fileset>
	</classpath>
	</xslt>
	</target>
	
	<target name="pmd" depends="compile">
	<mkdir dir="${dist}/pmd/xml"/>
	<mkdir dir="${dist}/pmd/html"/>
	<pmd shortFilenames="true" encoding="UTF-8">
	<ruleset>rulesets/java/basic.xml</ruleset>
	<ruleset>rulesets/java/braces.xml</ruleset>
	<ruleset>rulesets/java/codesize.xml</ruleset>
	<ruleset>rulesets/java/controversial.xml</ruleset>
	<ruleset>rulesets/java/design.xml</ruleset>
	<ruleset>rulesets/java/finalizers.xml</ruleset>
	<ruleset>rulesets/java/imports.xml</ruleset>
	<ruleset>rulesets/java/naming.xml</ruleset>
	<ruleset>rulesets/java/optimizations.xml</ruleset>
	<ruleset>rulesets/java/strictexception.xml</ruleset>
	<ruleset>rulesets/java/strings.xml</ruleset>
	<ruleset>rulesets/java/sunsecure.xml</ruleset>
	<ruleset>rulesets/java/typeresolution.xml</ruleset>
	<ruleset>rulesets/java/unusedcode.xml</ruleset>
	<ruleset>rulesets/java/unnecessary.xml</ruleset>
	<formatter type="xml" toFile="${dist}/pmd/xml/pmd_report.xml"/>
	<fileset dir="${src.java}">
	<include name="**/*.java"/>
	</fileset>
	</pmd>
	
	<cpd minimumTokenCount="10" outputFile="${dist}/pmd/xml/cpd_report.xml" format="xml" encoding="UTF-8">
	<fileset dir="src">
	<include name="**/*.java"/>
	</fileset>
	</cpd>
	<xslt includes="cpd_report.xml" basedir="${dist}/pmd/xml" destdir="${dist}/pmd/html" extension=".html" style="${pmd.home}/etc/xslt/cpdhtml.xslt">
	<classpath>
	<fileset dir="${xalan.home}">
	<include name="*.jar"/>
	</fileset>
	</classpath>
	</xslt>
	<xslt includes="pmd_report.xml" basedir="${dist}/pmd/xml" destdir="${dist}/pmd/html" extension=".html" style="${pmd.home}/etc/xslt/wz-pmd-report.xslt">
	<classpath>
	<fileset dir="${xalan.home}">
	<include name="*.jar"/>
	</fileset>
	</classpath>
	</xslt>
	</target>
	
	<target name="findbugs" depends="compile">
	<mkdir dir="${dist}/findbugs/xml"/>
	<mkdir dir="${dist}/findbugs/html"/>
	<findbugs home="${findbugs.home}" output="xml:withMessages" outputFile="${dist}/findbugs/xml/report.xml" workHard="true" effort="max" projectName="${ant.project.name}">
	<sourcePath path="${src.java}"/>
	<class location="${build.classes}"/>
	</findbugs>
	<xslt includes="report.xml" basedir="${dist}/findbugs/xml" destdir="${dist}/findbugs/html" extension=".html" style="${findbugs.home}/src/xsl/fancy.xsl">
	<classpath>
	<fileset dir="${xalan.home}">
	<include name="*.jar"/>
	</fileset>
	</classpath>
	</xslt>
	</target>
	
	<target name="quality" depends="cs,pmd,findbugs"></target>
	<target name="reports" depends="quality,run-tests,javadoc"/>

	<target name="clean" 
		description="Brisanje generiranog sadržaja" >
		<!-- Obriši direktorije ${build} i ${dist} -->
		<delete dir="${build}" failonerror="false" />
		<delete dir="${dist}" failonerror="false" />
	</target>


	<target name="javadoc" depends="compile" description="Generiranje dokumentacije" >
		<!-- Stvaranje direktorija za distribuciju -->
		<mkdir dir="${dist}/doc"/>
		<javadoc packagenames="hr.*"
			sourcepath="${src.java}"
			Overview="${src.java}/overview.html"
			defaultexcludes="yes"
			destdir="${dist}/doc"
			Encoding="UTF-8"
			docencoding="UTF-8"
			charset="UTF-8"
			author="true"
			version="true"
			use="true"
			windowtitle="Dokumentacija programa">
			<doctitle><![CDATA[<h1>Prvi program</h1>]]></doctitle>
			<bottom><![CDATA[<i>Copyright &#169; 2013 ACME. All Rights Reserved.</i>]]></bottom>
		</javadoc>	
	</target>
	
</project>
